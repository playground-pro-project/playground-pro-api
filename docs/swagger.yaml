openapi: 3.0.0
info:
  description: |
    Playground Pro adalah sebuah marketplace yang digunakan untuk memesan venue.
  version: "1.0.0"
  title: Playground Pro Restful-API
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dimasyudhana/playground-pro/1.0.0
  - description: Production
    url: https://peterzalai.biz.id
tags:
  - name: Authentication
    description: Identifikasi data pengguna
  - name: User
    description: Pengguna aplikasi yang dibangun
  - name: Venue
    description: Product yang akan disewakan penyewa
  - name: Reservation
    description: Proses menyewa venue dan pembayaran setelah membuat pemesanan vanue oleh peminjam
  - name: Review
    description: Review untuk venue yang telah disewa oleh peminjam

paths:
  "/users/reservation":
    get:
      tags:
        - User
      summary: Get user that booking venue, order by lastest update
      responses:
        "200":
          $ref: "#/components/responses/Response200UserReservation"
        "404":
          $ref: "#/components/responses/Response404"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

  "/venues":
    get:
      tags:
        - Venue
      summary: Find list venue, venue's reviews and rating (pagination)
      description: Find list venue, venue's average reviews and rating accumulation
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: String value of category to retrieve list of category venues
          required: false
        - in: query
          name: place
          schema:
            type: string
          description: String value of place to retrieve list of place venues
          required: false
        - in: query
          name: rating
          schema:
            type: integer
          description: String range value of rating to retrieve list of rating venues
          required: false
        - in: query
          name: price
          schema:
            type: integer
          description: String range value of price to retrieve list of price venues
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          description: The limit number to retrieve
          required: true
        - in: query
          name: offset
          schema:
            type: integer
          description: The offset number to retrieve
          required: false
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to retrieve
          required: true
        - in: query
          name: sort
          schema:
            type: string
          required: false
      responses:
        "200":
          $ref: "#/components/responses/Response200ListVenues"
        "400":
          $ref: "#/components/responses/Response400"
        "404":
          $ref: "#/components/responses/Response404"
        "500":
          $ref: "#/components/responses/Response500"

    post:
      tags:
        - Venue
      summary: Register venue
      description: User can register a venue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                name:
                  type: string
                  uniqueItems: true
                  description: Nama unik tempat olahraga
                description:
                  type: string
                  description: Deskripsi tempat olahraga
                service_time:
                  type: string
                location:
                  type: string
                  description: Alamat tempat olahraga
                price:
                  type: number
                  description: Harga sewa tempat olahraga
                  format: float
            example:
              category: "football"
              name: "Bola Bolaan"
              description: "Deskripsi Bola Bolaan"
              service_time: "07:45 - 23:00"
              location: "Jalan Utama No. 123, Kota Anywhere"
              price: 29.99
      responses:
        "201":
          $ref: "#/components/responses/Response201"
        "400":
          $ref: "#/components/responses/Response400"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []


  "/vanues/{vanue_id}/availability":
    get:
      tags:
        - Venue
      summary: Check availability
      description: _
      parameters:
        - name: vanue_id
          in: path
          description: Vanue ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/responses/Response200CheckAvailability"
        "400":
          $ref: "#/components/responses/Response400"
        "404":
          $ref: "#/components/responses/Response404"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

  "/reservations":
    post:
      tags:
        - Reservation
      summary: User can make a reservation
      description: Endpoint login user to the web-application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reservations"
            example:
              reservation:
                venue_id: "string-uuid"
                check-in_date: "2023/06/05 08:05"
                check-out_date: "2023/08/05 08:05"
              payment:
                payment_type: "bri/bca/bni/mandiri/permata/indomaret/alfamart/gopay/shopeepay/qris"
      responses:
        "201":
          $ref: "#/components/responses/Response201MakeReservation"
        "400":
          $ref: "#/components/responses/Response400"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

  "/reservations/{reservation_id}":
    put:
      tags:
        - Reservation
      summary: Edit an existing reservation
      description: Endpoint edit a reservation at least 1 hour before check-in
      parameters:
        - name: reservation_id
          in: path
          description: Reservation ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reservations"
            example:
              check-in_date: "2023/06/05 08:05"
              check-out_date: "2023/08/05 08:05"
      responses:
        "201":
          $ref: "#/components/responses/Response201"
        "400":
          $ref: "#/components/responses/Response400"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

    delete:
      tags:
        - Reservation
      summary: User can cancel a reservation
      description: User can cancel a reservation at least 1 hour before check-in and cancel payment instead then get refund 75% of grand_total. None of these conditions means normal delete reservation.
      parameters:
        - name: reservation_id
          in: path
          description: Reservation ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/responses/Response200"
        "404":
          $ref: "#/components/responses/Response404"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

  "/reservations/status":
    post:
      tags:
        - Reservation
      summary: Retrive payment notification update
      description: Retrive payment notification to update status on database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/midtrans_callback"
      responses:
        "200":
          $ref: "#/components/responses/Response200"
        "400":
          $ref: "#/components/responses/Response400"
        "404":
          $ref: "#/components/responses/Response404"
        "500":
          $ref: "#/components/responses/Response500"
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  requestBodies:
    RequestLoginUser:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/users"

  responses:
    Response200:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              message:
                type: string
                example: "Successful operation"

    Response201:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 201
              message:
                type: string
                example: "Successful operation"

    Response400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: "Bad request"

    Response401:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              message:
                type: string
                example: "Unauthorized access."

    Response404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              message:
                type: string
                example: "The requested resource was not found"

    Response500:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              message:
                type: string
                example: "Internal server error"

    Response200ListVenues:
      description: Get list of events with pagination
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              message:
                type: string
                example: "Successful Operation"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/venues"
              pagination:
                $ref: "#/components/schemas/pagination"
          example:
            code: 200
            message: "Successful Operation"
            data:
              - venue_id: "string-uuid"
                category: "basketball"
                name: "Venue 1"
                username: "User 1"
                location: "Jakarta"
                distance: 1
                price: 100.50
                average_rating: 4.55
                venue_picture_url: "https://images.app.goo.gl/t5b981L6oUTU3fE18"
              - venue_id: "string-uuid"
                category: "football"
                name: "Venue 2"
                username: "User 2"
                location: "Jakarta"
                distance: 1.3
                price: 200.75
                average_rating: 4.75
                venue_picture_url: "https://images.app.goo.gl/t5b981L6oUTU3fE18"
            pagination:
              limit: 5
              offset: 0
              page: 1
              total_rows: 15
              total_pages: 3

    Response200CheckAvailability:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    reservation_id:
                      type: string
                    category:
                      type: string
                    name:
                      type: string
                    subtotal:
                      type: integer
                    duration:
                      type: integer
                    gross_amount:
                      type: integer
                    check-in_date:
                      type: string
                      format: date-time
                    check-out_date:
                      type: string
                      format: date-time
          example:
            code: 200
            message: "Successful operation"
            data:
              - name: "Tono Haha"
                check-in_date: "Saturday,2023-06-05 08:05"
                check-out_date: "Saturday,2023-06-06 08:05"
              - name: "Trim"
                check-in_date: "Saturday,2023-06-05 10:05"
                check-out_date: "Saturday,2023-06-07 10:05"
              - name: "Concate"
                check-in_date: "Saturday,2023-06-07 14:05"
                check-out_date: "Saturday,2023-08-08 14:05"

    Response200Reservation:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    reservation_id:
                      type: string
                    category:
                      type: string
                    name:
                      type: string
                    subtotal:
                      type: integer
                    duration:
                      type: integer
                    gross_amount:
                      type: integer
                    check-in_date:
                      type: string
                      format: date-time
                    check-out_date:
                      type: string
                      format: date-time
          example:
            code: 200
            message: "Successful operation"
            data:
              - reservation_id: "string-uuid"
                category: "futsal"
                name: "Arena Futsal Tidar"
                subtotal: 100
                duration: 2
                gross_amount: 200
                check-in_date: "Saturday,2023-06-05 08:05"
                check-out_date: "Saturday,2023-08-05 08:05"
              - reservation_id: "string-uuid"
                category: "futsal"
                name: "Arena Futsal Tidar"
                subtotal: 100
                duration: 2
                gross_amount: 200
                check-in_date: "Saturday,2023-06-05 08:05"
                check-out_date: "Saturday,2023-08-05 08:05"

    Response200UserReservation:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              message:
                type: string
                example: "Successful operation"
              data:
                type: array
                items:
                  type: object
            example:
              code: 200
              message: "Successful operation"
              data:
                - reservation_id: "string-uuid"
                  venue_name: "tidar basket"
                  category: "basketball"
                  average_rating: 4.7
                  owner: "User 2"
                  address: "Jakarta"
                  check-in_date: "2023/06/05 08:05"
                  check-out_date: "2023/08/05 08:05"
                  price: 100
                  total_hours: 2
                  gross_amount: 200
                  bank_account: "bca"
                  va_number: VA4nUmber
                  status: "success"
                - reservation_id: "string-uuid"
                  venue_name: "tidar futsal"
                  category: "futsal"
                  average_rating: 4.7
                  owner: "User 2"
                  address: "Jakarta"
                  check-in_date: "2023/07/10 14:30"
                  check-out_date: "2023/07/15 11:00"
                  price: 150
                  total_hours: 1
                  gross_amount: 150
                  bank_account: "bri"
                  va_number: VA4nUmber
                  status: "pending"

    Response200Review:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
            example:
              code: 200
              message: "Successful add feedback"
              data:
                review_id: 1
                fullname: "Petrik"
                profile_picture: "https://images.app.goo.gl/t5b981L6oUTU3fE18"
                review: "Ini bagian review untuk venue yang bersangkutan"
                rating: 5

    Response201MakeReservation:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    payment_id:
                      type: string
                    reservation_id:
                      type: string
                    payment_method:
                      type: string
                    payment_type:
                      type: string
                    payment_code:
                      type: string
                    
          example:
            code: 200
            message: "Successful operation"
            data:
              payment_id: "85ef6565-eb95-4be2-a4c0-a6425b27dae7"
              reservation_id: "271b7e12-6936-47e3-a1de-c8fdbfee250f"
              payment_method: "cstore"
              payment_type: "alfamart"
              payment_code: "43863390217"

    Response201SubmitPayment:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              token:
                type: string
            example:
              code: 201
              message: "Success, Bank Transfer transaction is created"

    Response201RegisterReview:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
            example:
              code: 200
              message: "Successful add feedback"
              data:
                review_id: 1
                fullname: "Petrik"
                review: "Ini bagian review untuk venue yang bersangkutan"
                rating: 5

  schemas:
    users:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        fullname:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        password:
          type: string
        bio:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - user
            - owner
        profile_picture:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    venues:
      type: object
      required:
        - name
        - venue_picture_id
      properties:
        venue_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        category:
          type: string
          format: uuid
          enum:
            - basketball
            - football
            - futsal
            - badminton
            - swimming
        name:
          type: string
        description:
          type: string
        location:
          type: string
        price:
          type: integer
        longitude:
          type: string
        latitude:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    venue_pictures:
      type: object
      required:
        - venue_picture
      properties:
        venue_picture_id:
          type: string
        venue_id:
          type: string
        url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    reservations:
      type: object
      properties:
        reservation_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        venue_id:
          type: string
          format: uuid
        payment_id:
          type: string
          format: uuid
        check-in_date:
          type: string
          format: date-time
        check-out_date:
          type: string
          format: date-time
        duration:
          type: integer
          format: uint
        subtotal:
          type: integer
          format: float64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    payments:
      type: object
      required:
        - grand_total
        - bank_account
      properties:
        payment_id:
          type: string
          format: uuid
        va_number:
          type: string
        grand_total:
          type: string
        bank_account:
          type: string
          enum:
            - cash
            - bca
            - bni
            - bri
            - mandiri
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    reviews:
      type: object
      required:
        - user_id
        - venue_id
        - rating
      properties:
        review_id:
          type: integer
          format: uint64
        user_id:
          type: string
          format: uuid
        venue_id:
          type: string
          format: uuid
        review:
          type: string
        rating:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    midtrans_callback:
      type: object
      properties:
        transaction_time:
          type: string
        transaction_status:
          type: string
        transaction_id:
          type: string
        status_message:
          type: string
        status_code:
          type: string
        signature_key:
          type: string
        payment_type:
          type: string
        order_id:
          type: string
        merchant_id:
          type: string
        masked_card:
          type: string
        gross_amount:
          type: string
        fraud_status:
          type: string
        eci:
          type: string
        currency:
          type: string
        channel_response_message:
          type: string
        channel_response_code:
          type: string
        card_type:
          type: string
        bank:
          type: string
        approval_code:
          type: string
    api_response:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: string

    pagination:
      type: object
      properties:
        limit:
          type: integer
          description: The current limit number.
        offset:
          type: integer
          description: The current offset number.
        page:
          type: integer
          description: The current page number.
        total_pages:
          type: integer
          description: The total number of pages.
        total_items:
          type: integer
          description: The total number of items.
